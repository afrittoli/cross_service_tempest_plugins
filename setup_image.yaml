---
- hosts: localhost
  tasks:
    - name: Setup a VM to create the workshop image
      os_server:
       state: present
       cloud: "{{ cloud_profile }}"
       name: workshop_base
       image: "Ubuntu 16.04"
       key_name: "{{ cloud_keyname }}"
       timeout: 200
       flavor: r2-15
      register: vm
    - name: Add the VM to the inventory
      add_host:
        name: "{{ vm.openstack.interface_ip }}"
        group: cloud

- hosts: cloud
  gather_facts: yes
  roles:
    - initial_setup
    - gather_host_info
    - fix_etc_hosts
    - fix_disk_layout
    - create_base_folder
    - start_fresh_logging
    - stack_user
    - setup_tempest_user
    - pre_install_devstack_stuff
    - configure_devstack

- hosts: localhost
  vars:
    openstack: "{{ ansible_python_interpreter|dirname }}/openstack"
  tasks:
    - name: List existing images
      command: >
        {{ openstack }} --os-cloud {{ cloud_profile }} \
          image list --private -f json
      register: images_out
    - name: Get existing images and name of the new one
      set_fact:
        old_images: "{{ images_out.stdout | from_json }}"
        new_image: "workshop_image_{{ ansible_date_time.date }}_{{ ansible_date_time.time }}"
    - name: Snapshot the VM to create a new workshop image
      command: >
        {{ openstack }} --os-cloud {{ cloud_profile }} \
          server image create {{ vm.id }} \
          --name {{ new_image }} --wait
    - name: Delete old images
      os_image:
        state: absent
        cloud: "{{ cloud_profile }}"
        name: "{{ item.Name }}"
      with_items: "{{ old_images }}"
      when: item.Name | match('workshop_image_.*')
